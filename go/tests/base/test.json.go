package base
// import "ccxt"

// // PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// // https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// func TestJson() {
//     exchange := ccxt.Exchange{}
//     // Test: object
//     var obj interface{} = map[string]interface{} {
//         "k": "v",
//     }
//     var objJson interface{} = exchange.Json(obj)
//     Assert(IsEqual(objJson, "{\"k\":\"v\"}"))
//     // Test: list
//     var list interface{} = []interface{}{1, 2}
//     var listJson interface{} = exchange.Json(list)
//     Assert(IsEqual(listJson, "[1,2]"))

//     {		ret__ := func(this *undefined) (ret_ interface{}) {
//     		defer func() {
//     			if e := recover().(interface{}); e != nil {
//                     if e == "break" {
//     				    return
//     			    }
//     				ret_ = func(this *undefined) interface{} {
//     					// catch block:
//                                 var errString interface{} = exchange.Json(e)
//             Assert(IsEqual(errString, "{\"name\":\"BadRequest\"}"))
//     					return nil
//     				}(this)
//     			}
//     		}()
//     		// try block:
//                     panic(BadRequest("some error"))
//     		return nil
//     	}(this)
//     	if ret__ != nil {
//     		return ret__
//     	}
//     }
//     // Test: json a string
//     var str interface{} = "ccxt, rocks!"
//     var serializedString interface{} = exchange.Json(str)
//     Assert(IsEqual(serializedString, "\"ccxt, rocks!\""))
// }